#!/usr/bin/ruby
#
$:.unshift File.dirname(__FILE__)

require 'pathname'
require_relative '../lib/xc_script.rb'
require_relative '../lib/xc_config.rb'
require_relative '../lib/xcindex_file.rb'

def main
  config = load_config

  exit(1) unless parse_args(ARGV, config)

  projects = list_projects(
    config[:search_path],
    config[:exclude_paths],
    config[:search_depth]
  )
  exit(1) if projects.empty?

  projects = prior_xcworkspace(projects)
  save_project_index(projects)
end

def parse_args(argv, config)
  if argv.length == 0
    usage(:illegal_arguments)
    return false
  end

  arg = argv.shift

  if arg
    config[:search_path] = arg
    arg = argv.shift
    if arg && arg.to_i
      config[:search_depth] = arg.to_i
    end
    return true
  else
    usage(:illegal_arguments)
    return false
  end
end

def usage(error_sym)
  case error_sym
  when :illegal_arguments
    STDERR.puts <<EOS
Usage: xcindex search-path <depth>

Option:
  search-path: Search path for making a project_index.
  depth: Number of depth of directory-search-recursively.
EOS
  end
end

main

